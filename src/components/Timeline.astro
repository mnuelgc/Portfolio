---
import type { Item } from "../types/items";
import StackItem from "../components/StackItem.astro";

const { items = [] } = Astro.props as { items: Item[] };
---

<div class="timeline">
  {
    items.map((item, i) => (
      <div class={`row ${i % 2 === 0 ? "left" : "right"}`}>
        <div class="node" aria-hidden="true" />

        <details class="card">
          <summary>
            <span class={`tag ${item.tagColor ?? "red"}`}>{item.tag}</span>

            <div class="head">
              {item.logo && (
                <img class="logo" src={item.logo} alt="" loading="lazy" />
              )}
              <div class="text">
                <h3>{item.title}</h3>
                {item.subtitle && <p class="subtitle">{item.subtitle}</p>}
                <span class="date"> {item.date}</span>
                {item.linkHref && (
                  <a
                    class="link"
                    href={item.linkHref}
                    target="_blank"
                    rel="noreferrer"
                  >
                    {item.linkText ?? item.linkHref}
                  </a>
                )}
              </div>
            </div>

            <svg
              class="chev"
              viewBox="0 0 24 24"
              width="20"
              height="20"
              aria-hidden="true"
            >
              <path
                d="M6 9l6 6 6-6"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
              />
            </svg>
          </summary>
          <div class="content">
            <p>{item.description ?? "No extra details provided."}</p>
          </div>
        </details>
      </div>
    ))
  }
</div>

<style>
  :root {
    --line: #d7d7d7;
    --ink: #1f2937;
    --muted: #6b7280;
    --card: #fff;
    --bg: #f7f7f7;
  }

  .timeline {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
    padding: 40px 0;
  }

  .timeline:before {
    content: "";
    position: absolute;
    left: 50%;
    top: 0;
    bottom: 0;
    width: 4px;
    background: var(--line);
    transform: translateX(-50%);
  }

  .row {
    position: relative;
    width: 50%;
    padding: 18px 24px;
  }

  .row.left {
    left: 0;
    padding-right: 48px;
  }
  .row.right {
    left: 50%;
    padding-left: 48px;
  }

  .node {
    position: absolute;
    top: 32px;
    width: 20px;
    height: 20px;
    background: #fff;
    border: 4px solid var(--line);
    border-radius: 999px;
    z-index: 2;
  }

  .row.left .node {
    left: 100%;
    transform: translateX(-50%);
  }
  .row.right .node {
    left: 0;
    transform: translateX(-50%);
  }

  .card {
    background-color: var(--card);
    border-radius: 14px;
    padding: 20px;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
    max-width: 500px;
    overflow: hidden;
  }

  .card > summary {
    list-style-type: none;
    cursor: pointer;
    display: grid;
    grid-template-columns: 1fr auto;
    align-items: center;
    gap: 12px;
  }

  .card > summary::-webkit-details-marker {
    display: none;
  }

  .tag {
    display: inline-block;
    justify-self: start;
    font:
      600 12px/1 system-ui,
      san-serif;
    color: #fff;
    padding: 6px 10px;
    border-radius: 6px;
    font-size: 12px;
    font-weight: bold;
    margin-bottom: 10px;
  }

  .tag.red {
    background: #820e0e;
  }
  .tag.green {
    background: #056a27;
  }
  .tag.blue {
    background: #2563eb;
  }

  .head {
    display: flex;
    align-items: center;
    gap: 12px;
    grid-column: 1 / -1;
  }
  .logo {
    width: 36px;
    height: 36px;
    object-fit: contain;
    border-radius: 8px;
  }
  .text h3 {
    margin: 0;
    color: var(--ink);
    font:
      700 18px/1.2 system-ui,
      sans-serif;
  }
  .subtitle {
    margin: 4px 0 0;
    color: var(--ink);
    opacity: 0.9;
  }
  .date {
    display: inline-block;
    margin-top: 6px;
    color: var(--muted);
    font-size: 12px;
  }
  .link {
    display: block;
    margin-top: 6px;
    font-size: 12px;
    text-decoration: underline;
    color: #2563eb;
  }

  .chev {
    transition: transform 0.2s ease;
    opacity: 0.7;
    grid-column: 2;
  }
  details[open] .chev {
    transform: rotate(180deg);
  }
  .content {
    padding: 12px 18px;
    font-size: 14px;
    color: var(--ink);
  }

  @media (max-width: 820px) {
    .timeline::before {
      left: 28px;
    }
    .row {
      width: 100%;
      left: 0;
      padding: 18px 14px 18px 60px;
    }
    .node {
      left: 18px;
    }
  }

  @media screen and (max-width: 768px) {
    .timeline::before {
      left: 20px;
      transform: none;
    }

    .row {
      width: 100%;
      left: 0;
      padding: 18px 14px 18px 60px;
    }

    .row.left,
    .row.right {
      left: 0;
      width: 100%;
      left: 0;
      padding: 18px 14px 18px 60px;
    }

    .row::before {
      left: 20px;
      right: auto;
    }

    .row.left .node,
    .row.right .node {
      left: 20px;
      transform: translateX(-50%);
    }
  }
</style>
